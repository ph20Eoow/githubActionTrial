name: "TruffleHog Security Scan"

on:
  push:
    branches: ["**"]

jobs:
  TruffleHog:
    runs-on: ubuntu-latest
    # outputs:
    #   result: ${{ steps.trufflehog.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Checkout private tool code
        uses: actions/checkout@v2
        with:
          repository: ph20Eoow/private_action
          path: ./.github/
      - name: Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
      # - name: TruffleHog OSS
      #   id: trufflehog
      #   uses: trufflesecurity/trufflehog@v3.4.1
      #   with:
      #     path: ./
      #     base: ${{ github.event.repository.default_branch }}
      #     head: HEAD
      #   run: echo "::set-output name=test::test"
      #   continue-on-error: true
      
      - name: TruffleHog Scan from Private Action 
        id: trufflehog
        uses: ./.github/actions/trufflehog
        with:
          path: ${{ github.workspace }}
      - name: Sample docker action from Private Action 
        id: greeting
        uses: ./.github/actions/docker-action
        with:
          who-to-greet: 'Tony'
      
      # - name: Create
      #   id: create
      #   if: contains(${{steps.trufflehog.outputs.*}}, 'Found')
      #   uses: atlassian/gajira-create@v2.0.1
      #   with:
      #     project: SEC
      #     issuetype: Vulnerability
      #     summary: |
      #       [Github Action | TruffleHog] | ${{ github.repository }}
      #     description: |
      #       TruffleHog result: join(${{steps.trufflehog.outputs.*}}, '\n')
      - name: access the result
        run: echo "Issue ${{ steps.trufflehog.outputs.result }} was created"
      - name: Echo WORKSPACE
        run: "ls -la $GITHUB_WORKSPACE"
      - name: access the result by cat
        run: cat ./output.json
      - name: access the result from helloworld
        run: echo "Issue ${{ steps.greeting.outputs.time }} was created"
      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\n```toJSON(${{steps.trufflehog.outputs.result}})```"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK